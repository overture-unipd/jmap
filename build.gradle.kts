/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application

    // id("com.diffplug.spotless") version "6.23.3"
    id("com.bmuschko.docker-java-application") version "9.4.0"
    id("com.dorongold.task-tree") version "2.1.1"
}

// spotless {
//     java {
//         googleJavaFormat()
//     }
// }

docker {
    javaApplication {
        baseImage.set("openjdk:21-jdk-slim")
        maintainer.set("Overture 'overture.unipd@gmail.com'")
        ports.set(listOf(8000))
        images.set(setOf("overture-unipd/jmap:latest"))
        mainClassName.set("it.unipd.overture.jmap.Ignite")
        // jvmArgs.set(listOf("-Xms256m", "-Xmx2048m"))
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:5.9.3")

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:32.1.1-jre")

    implementation("com.sparkjava:spark-core:2.9.4")
    implementation("org.slf4j:slf4j-simple:1.7.21")

    implementation("org.springframework.security:spring-security-crypto:6.2.0")
    implementation("org.bouncycastle:bcprov-jdk18on:1.77")

    implementation("com.rethinkdb:rethinkdb-driver:2.4.4")
    implementation("commons-logging:commons-logging:1.3.0")

    implementation("rs.ltt.jmap:jmap-common:0.8.15")
    implementation("rs.ltt.jmap:jmap-gson:0.8.15")
    implementation("com.google.code.gson:gson:2.10.1")
    // implementation("com.fasterxml.jackson.core:jackson-databind:2.16.0")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

application {
    // Define the main class for the application.
    mainClass.set("it.unipd.overture.jmap.Ignite")
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
